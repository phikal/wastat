#!/usr/bin/perl

# waconv - whatsapp conversion tool
# License: MIT (see LICENSE)

use strict;
use warnings;

$|++;

# locale to convert from
my $L = lc shift @ARGV;

print "$0: Converts whatsapp chats from * to 24h&co. Format
Usage: $0 [lang] [chat file]

Supported locale:
	de:	convert from german
	us:	convert from us format (MM/DD/YYYY, AM/PM)
	uk:	convert from us format (DD/MM/YYYY, AM/PM)
" and exit if $L =~ /^(h|$)/ or not @ARGV;

die "Locale not supported\n"
	unless $L =~ /^de|us|uk/;

# line, time and date (and not) regex
my ($tre, $dre, $lre, $nre);

if ($L eq "de") {
  $dre = qr{(\d{2}).(\d{2}).(\d{4})};
  $tre = qr{(\d{1,2}):(\d{2}) (vorm|nachm).};
  $lre = qr{^(\d{2}\.\d{2}\.\d{4}), (\d{1,2}:\d{2} (?:vorm|nachm)\.) - (?:([^:]*):)? (.*)$};
  $nre = qr{^(\d{2}\.\d{2}\.\d{4}), (\d{1,2}:\d{2} (?:vorm|nachm)\.) - (.*)$};
} elsif ($L eq "us") {
  $dre = qr{(\d{2})/(\d{2})/(\d{4})};
  $tre = qr{(\d{1,2}):(\d{2}) (am|pm)};
  $lre = qr{^(\d{1,2}/\d{2}/\d{4}), (\d{1,2}:\d{2} (?:am|pm)) - (?:([^:]*):)? (.*)$};
  $nre = qr{^(\d{1,2}/\d{2}/\d{4}), (\d{1,2}:\d{2} (?:am|pm)) - (.*)$};
} elsif ($L eq "uk") {
  $dre = qr{(\d{2})/(\d{2})/(\d{4})};
  $tre = qr{(\d{1,2}):(\d{2}) (a\.m\.|p\.m\.)};
  $lre = qr{^(\d{2}/\d{2}/\d{4}), (\d{1,2}:\d{2} (?:a\.m\.|p\.m\.)) - (?:([^:]*):)? (.*)$};
  $nre = qr{^(\d{2}/\d{2}/\d{4}), (\d{1,2}:\d{2} (?:a\.m\.|p\.m\.)) - (.*)$};
}


sub cd { # convert date
  my ($date) = @_;
  if ($date =~ m/$dre/) {
    my ($month, $day, $year) = ($1, $2, $3);
    ($month, $day, $year) = ($2, $1, $3) if $L eq "us" or $L eq "uk";
    return sprintf "%02d/%02d/%04d", $day, $month, $year;
  } else { return $date; }
}

sub cXXtAM { # convert any variation of AM/PM to standard AM/PM
  my $time = shift @_;
  if ($time =~ m/$tre/) {
    my $noon;
    $noon = $3 eq "vorm" ? "am" : "pm" if $L eq "de";
    $noon = $3 eq "a.m." ? "am" : "pm" if $L eq "uk";
    $noon = $3  if $L eq "us";
    return "$1:$2 $noon";
  } else { return $time; }
}

sub c12t24 { # convert 12h to 24h
  chomp(my $x = shift @_);
  my @t = split(/[: ]/, $x);
  $t[0]= $t[0] + 12 if $t[2] eq "pm" and $t[0] < 12;
  $t[0]= 0 if $t[0] == 12 and $t[2] eq "am";
  return $t[0], $t[1];
}

sub ct { # covert time
  my ($time) = @_;
  if ($time =~ m/$tre/) {
    my ($hour, $min) = c12t24(cXXtAM($time));
    return sprintf "%02d:%02d", $hour, $min;
  }
}

while (<>) { chomp;
	if (m/$lre/gx) {
		my ($date, $time, $user, $message) = (&cd($1), &ct($2), $3, $4);
		print "$date, $time - $user: $message\n";
	} else {
		print "$_\n" if $_ and not m/$nre/gx;
	}
}
