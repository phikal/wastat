#!/usr/bin/env python3

# fill missing dates (and sort)
# licence: MIT (see LICENSE)

import datetime
import time
import sys
import fileinput
import re

if len(sys.argv) < 3:
	print("usage: prog | fmd [start date] [end date]")
	quit()

form = "%m/%d/%Y"
day = datetime.timedelta(days=1)
prev = datetime.datetime.strptime(sys.argv[1], form)
end = datetime.datetime.strptime(sys.argv[2], form)

pattern = re.compile(r"^(.*)\t(\d{2}/\d{2}/\d{4})")

items = []
for line in sys.stdin:
	match = pattern.match(line)
	if not match:
		continue
	ds = match.group(2)
	date = datetime.datetime.strptime(ds, form).timestamp()
	items.append((date, match.group(1)))

items.sort(key=lambda x: x[0])
for i in items:
	date = datetime.datetime.utcfromtimestamp(i[0])
	while prev < date-day:
		print("{}\t{}".format(0, prev.strftime(form)))
		prev += day
	print("{}\t{}".format(i[1], date.strftime(form)))
	prev += day
